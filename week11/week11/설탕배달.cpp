#include <iostream>
using std::cout;
using std::cin;
using std::endl;

int main() {
	int N;
	cin >> N;         // N을 입력받는다.
	if (N < 3 || N > 5000) return 0;  // N을 3~5000으로 제한한다.

	int m = N / 5;   /* 큰 단위로 묶을 수록 묶음의 개수는 줄어든다.
					 우선 5킬로그램 봉지로 최대한 묶기 위해
					 N을 5로 나눈 몫 m을 구하도록 한다. */
	
	int f; //5킬로그램 봉지의 개수
	int t = 0; /*3킬로그램 봉지의 개수
		(그냥 단순히 "초기화되지 않았다는 경고가 보기 싫어서" 0을 할당함)*/

	for (int i = m; i >= 0; i--) {
		f = i;
		/* N에서 5*m을 뺀 값이 3으로 나누어 떨어지지 않을 수 있다.
	   이 경우, 5킬로그램 봉지의 개수를 하나씩 줄여가면서
	   3킬로그램 봉지에 정확히 나누어 담을 수 있는지 확인한다.*/

		if ((N - 5 * f) % 3 == 0) {
			t = (N - 5 * f) / 3;
			break;   /* 정확히 나누어 담을 수 있게 되면 f,t값을 결정한 뒤
					 반복문을 탈출한다.*/
		}
	}

	if (f + t == 0) {
		/* N값은 3 이상이므로 f+t값은 0일 수 없다.
		그러나 정확히 나누어 담을 수 없는 경우라면
		for문을 거친 후의 f값은 0이며
		t값은 초기값 그대로 0일 것이다.*/

		cout << -1 << endl;
		return 0;
	}  // 반복문을 거쳤음에도 정확히 나누어 담을 수 없다면 -1을 출력한다.

	cout << f + t << endl;  /* f,t값이 정상적으로 결정되었다면
							봉지의 총 개수인 f+t값을 출력한다.*/

	return 0;
}
